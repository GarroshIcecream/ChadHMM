[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[project]
name = "chadhmm"
version = "0.4.1"
description = "Package for Hidden Markov and Hidden Semi-Markov Models"
readme = "README.md"
license = {text = "MIT"}
authors = [
    {name = "GarroshIcecream", email = "garroshicecream@gmail.com"}
]
keywords = [
    "hmm", "hsmm", "gmm", "ghmm", "ghsmm",
    "hidden-markov-model", "hidden-semi-markov-model",
    "contexthmm", "contexthsmm", "parametrichmm"
]
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.12",
    "Topic :: Scientific/Engineering :: Artificial Intelligence",
    "Topic :: Scientific/Engineering :: Mathematics",
]
requires-python = ">=3.10"
dependencies = [
    "torch>=2.7.0",
    "torchvision>=0.22.0",
    "numpy>=1.22.1",
    "scikit-learn>=1.5.0",
    "matplotlib>=3.7.2",
]

[tool.uv.sources]
torch = [
  { index = "pytorch-cpu", marker = "sys_platform != 'linux'" },
  { index = "pytorch-cu128", marker = "sys_platform == 'linux'" },
]
torchvision = [
  { index = "pytorch-cpu", marker = "sys_platform != 'linux'" },
  { index = "pytorch-cu128", marker = "sys_platform == 'linux'" },
]

[[tool.uv.index]]
name = "pytorch-cpu"
url = "https://download.pytorch.org/whl/cpu"
explicit = true

[[tool.uv.index]]
name = "pytorch-cu128"
url = "https://download.pytorch.org/whl/cu128"
explicit = true

[dependency-groups]
dev = [
    "pytest>=8.4.2",
]
lint = [
    "ruff>=0.13.3",
    "ty>=0.0.1a21",
]
docs = [
    "mkdocs>=1.5.0",
    "mkdocs-material>=9.0.0",
    "mkdocstrings[python]>=0.24.0",
    "mkdocs-jupyter>=0.24.0"
]

[project.urls]
Homepage = "https://github.com/GarroshIcecream/chadhmm"
Repository = "https://github.com/GarroshIcecream/chadhmm"
Issues = "https://github.com/GarroshIcecream/chadhmm/issues"

[tool.hatch.build.targets.wheel]
packages = ["chadhmm"]

[tool.mypy]
python_version = "3.12"
ignore_missing_imports = true
warn_return_any = false
warn_unused_configs = false
disallow_untyped_defs = false
warn_unreachable = false
warn_no_return = false
warn_redundant_casts = false
warn_unused_ignores = false

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = ["test_*.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
addopts = "-v --tb=short"

[tool.coverage.run]
source = ["chadhmm"]
omit = [
    "*/tests/*",
    "*/test_*",
    "*/__pycache__/*",
]

[tool.ruff.lint]
select = [
    "E",  # pycodestyle errors
    "W",  # pycodestyle warnings
    "F",  # pyflakes
    "I",  # isort
    "B",  # flake8-bugbear
    "C4", # flake8-comprehensions
    "UP", # pyupgrade
]

[tool.ruff]
exclude = [
    "docs/",
    "*.ipynb",
]

[tool.ty.src]
exclude = [
    "docs/",
    "*.ipynb",
]
